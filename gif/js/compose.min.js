$(function() { ({
        options: {
            defaultDelay: 800,
            maxDelay: 1600,
            minDelay: 100,
            maxWidth: 895,
            minWidth: 10,
            maxHeight: 0,
            minHeight: 10,
            defaultWidth: 300,
            defaultHeight: 300,
            selectWidth: 0,
            selectHeight: 0
        },
        origins: [],
        list: [],
        init: function() {
            this.fileUrl = window.URL || window.webkitURL,
            this.composeContainer = $("#Z-composeContainer"),
            this.canvasModel = $("#Z-canvasModel"),
            this.speedSlider = $("#Z-speedSlider"),
            this.addUploadBtn = $("#Z-addUpload"),
            this.makerBtn = $("#Z-makerBtn"),
            this.frameList = $("#Z-frameList"),
            this.widthSelect = $("#Z-widthSelect"),
            this.upload(),
            this.start(),
            this.deleteViewList(),
            this.moveSpeedSlider(),
            this.setWidth(),
            this.order()
        },
        upload: function() {
            var t = this,
            e = $("#Z-uploadBtn");
            e.on("change",
            function() {
				/*
                if ($("#level").val() <= 10) {
                    alert("升级VIP可用");
                    return false
                }
				*/
                var i = this.files,
                a = 0;
                t.addUploadBtn.addClass("disabled").text("上传中..."),
                t.makerBtn.addClass("disabled"),
                function() {
                    var n = arguments,
                    s = i[a],
                    l = s.type.toLowerCase(),
                    d = ["image/jpeg", "image/jpg", "image/png"],
                    o = new FileReader;
                    o.readAsDataURL(s),
                    o.onload = function(o) {
                        var r = t.fileUrl.createObjectURL(t.dataURLtoBlob(this.result)); - 1 != d.indexOf(l) ? t.addSingle({
                            blob: r,
                            callback: function() {
                                a < i.length - 1 ? (a++, n.callee()) : (e.val(""), t.addUploadBtn.removeClass("disabled").text("添加图片"), t.makerBtn.removeClass("disabled"))
                            }
                        }) : t.splitGif({
                            blob: r,
                            base64: this.result,
                            callback: function() {
                                a < i.length - 1 ? (a++, n.callee()) : (e.val(""), t.addUploadBtn.removeClass("disabled").text("添加图片"), t.makerBtn.removeClass("disabled"))
                            }
                        }),
                        t.composeContainer.addClass("preview"),
                        t.origins.push({
                            name: s.name,
                            data: r
                        }),
                        t.setOriginList()
                    }
                } ()
            }),
            t.addUploadBtn.on("click",
            function() {
                $(this).hasClass("disabled") || e.trigger("click")
            })
        },
        addSingle: function(t) {
            var e = this,
            i = t || {},
            a = new Image;
            a.src = i.blob,
            a.onload = function() {
                e.list.push({
                    width: this.naturalWidth,
                    height: this.naturalHeight,
                    type: "static",
                    data: a,
                    sunFrames: []
                }),
                "function" == typeof i.callback && i.callback(),
                e.preview()
            }
        },
        splitGif: function(t) {
            var e = this,
            i = t || {},
            a = window.atob(i.base64.split(",")[1]),
            n = new Image;
            n.src = i.blob,
            playGIF.doParse(new Stream(a),
            function(t, a, s) {
                for (var l = [], d = 0; d < a.length; d++) {
                    l.push({
                        delay: 10 * a[d].delay,
                        data: a[d].data
                    })
                }
                e.list.push({
                    width: t.width,
                    height: t.height,
                    type: "gif",
                    data: n,
                    sunFrames: l
                }),
                "function" == typeof i.callback && i.callback(),
                e.preview()
            })
        },
        preview: function() {
            function t() {
                var i = e.list[l];
                e.runner2 && clearTimeout(e.runner2),
                "static" == i.type ? (a.clearRect(0, 0, n, s), a.drawImage(i.data, 0, 0, n, s), e.runner1 = setTimeout(function() {
                    l == e.list.length - 1 ? l = 0 : l++,
                    t()
                },
                e.options.defaultDelay)) : "gif" == i.type &&
                function() {
                    var o = arguments,
                    r = i.sunFrames[d],
                    h = e.createCanvas(r.data.width, r.data.height);
                    h.getContext("2d").putImageData(r.data, 0, 0),
                    a.clearRect(0, 0, n, s),
                    a.drawImage(h, 0, 0, n, s),
                    e.runner2 = setTimeout(function() {
                        d == i.sunFrames.length - 1 ? (d = 0, l == e.list.length - 1 ? l = 0 : l++, t()) : (d++, o.callee())
                    },
                    r.delay)
                } ()
            }
            var e = this,
            i = e.getCanvas(),
            a = i.getContext("2d"),
            n = i.width,
            s = i.height,
            l = 0,
            d = 0;
            e.runner1 && clearTimeout(e.runner1),
            e.runner2 && clearTimeout(e.runner2),
            e.list.length > 0 && t(),
            e.list.length > 1 ? e.makerBtn.removeClass("disabled") : 1 == e.list.length ? e.makerBtn.addClass("disabled") : e.composeContainer.removeClass("preview")
        },
        setOriginList: function() {
            for (var t = "",
            e = 0; e < this.origins.length; e++) {
                var i = this.origins[e];
                t += '<li data-index="' + e + '">\t<div class="view-item-image">\t\t<img src="' + i.data + '"/>\t</div>\t<div class="delete-btn Z-deleteBtn" data-index="' + e + '">\t\t<i class="iconfont icon-shanchu1"></i>\t</div>\t<div class="info">\t\t<input type="text" class="index" value="' + (e + 1) + '"/>\t\t<span class="name">' + i.name + "</span>\t</div></li>"
            }
            this.frameList.html(t)
        },
        order: function() {
            var t = this,
            e = "";
            t.frameList.on("focus", ".index",
            function() {
                e = $(this).val()
            }).on("blur", ".index",
            function() {
                var i = $(this).val(),
                a = $(this).closest("li").attr("data-index");
                if (util.isNum(i) && i != e) {
                    i < 1 && (i = 1),
                    i > t.origins.length && (i = t.origins.length);
                    var n = t.origins[a],
                    s = t.origins[i - 1];
                    t.origins.splice(a, 1, s),
                    t.origins.splice(i - 1, 1, n);
                    var l = t.list[a],
                    d = t.list[i - 1];
                    t.list.splice(a, 1, d),
                    t.list.splice(i - 1, 1, l),
                    t.preview(),
                    t.setOriginList()
                } else {
                    $(this).val(e)
                }
            }).on("keydown", ".index",
            function(t) {
                13 == t.which && $(this).trigger("blur")
            })
        },
        getCanvas: function() {
            var t = this.getSize(),
            e = this.createCanvas(t.width, t.height);
            return this.canvasModel.html(e),
            e
        },
        createCanvas: function(t, e) {
            var i = document.createElement("canvas");
            return i.width = t,
            i.height = e,
            i
        },
        getSize: function() {
            var t = this.options.defaultWidth,
            e = this.options.defaultHeight;
            return t = 0 == this.options.selectWidth ? this.list[0].width: this.options.selectWidth,
            e = 0 == this.options.selectHeight ? this.list[0].height: this.options.selectHeight,
            {
                width: t,
                height: e
            }
        },
        deleteViewList: function() {
            var t = this;
            t.frameList.on("click", ".Z-deleteBtn",
            function() {
                var e = $(this).attr("data-index");
                t.origins.splice(e, 1),
                t.list.splice(e, 1),
                t.preview(),
                t.setOriginList()
            })
        },
        start: function() {
            var t = this,
            e = $("#Z-downloadBtn");
            t.makerBtn.on("click",
            function() {
                if (!$(this).hasClass("disabled")) {
                    var i = t.getSize();
                    t.Gif = new GIF({
                        workerScript: "/gif/js/gif.help.js",
                        background: "#ffffff",
                        width: i.width,
                        height: i.height,
                        quality: 10,
                        workers: 4
                    }),
                    t.Gif.on("progress",
                    function(e) {
                        t.makerBtn.text("已完成  " + Math.round(100 * e) + "%")
                    }),
                    t.Gif.on("finished",
                    function(i) {
                        t.Gif = null,
                        t.makerBtn.removeClass("disabled").text("生成gif"),
                        e.removeClass("disabled").attr("href", t.fileUrl.createObjectURL(i)).attr("download", (new Date).getTime())
                    }),
                    t.makerBtn.addClass("disabled"),
                    e.addClass("disabled").removeAttr("href").removeAttr("download"),
                    t.createGif()
                }
            })
        },
        createGif: function() {
            for (var t = this.getSize(), e = 0; e < this.list.length; e++) {
                var i = this.list[e];
                if ("static" == i.type) { (d = (l = this.createCanvas(t.width, t.height)).getContext("2d")).drawImage(i.data, 0, 0, t.width, t.height),
                    this.Gif.addFrame(d, {
                        delay: this.options.defaultDelay
                    })
                } else {
                    if ("gif" == i.type) {
                        for (var a = 0; a < i.sunFrames.length; a++) {
                            var n = i.sunFrames[a],
                            s = this.createCanvas(n.data.width, n.data.height);
                            s.getContext("2d").putImageData(n.data, 0, 0);
                            var l = this.createCanvas(t.width, t.height),
                            d = l.getContext("2d");
                            d.drawImage(s, 0, 0, t.width, t.height),
                            this.Gif.addFrame(d, {
                                delay: n.delay
                            })
                        }
                    }
                }
            }
            this.Gif.render()
        },
        moveSpeedSlider: function() {
            var t = this,
            e = t.speedSlider.find(".line"),
            i = t.speedSlider.find(".bar"),
            a = e.width() - i.width(),
            n = !0;
            i.off("mousedown").on("mousedown",
            function(e) {
                n = !1;
                var s = e.clientX,
                l = i.position().left;
                util.forbiddenSelect(),
                $(document).off().on("mousemove",
                function(e) {
                    if (!n) {
                        var i = l + e.clientX - s;
                        i = i < 0 ? 0 : i <= a ? i: a,
                        t.setSpeedSliderProcess(i)
                    }
                }).on("mouseup",
                function(t) {
                    n = !0,
                    util.autoSelect()
                })
            }),
            e.on("mousedown",
            function(i) {
                var n = i.clientX - e.get(0).getBoundingClientRect().left;
                n = n < 0 ? 0 : n <= a ? n: a,
                t.setSpeedSliderProcess(n)
            })
        },
        setSpeedSliderProcess: function(t) {
            var e = this,
            i = e.speedSlider.find(".line"),
            a = e.speedSlider.find(".progress");
            e.speedSlider.find(".bar").css({
                left: t
            }),
            a.width(t);
            var n = t / (i.width() - 10) * e.options.maxDelay;
            e.options.defaultDelay = n < e.options.maxDelay ? n > e.options.minDelay ? n: e.options.minDelay: e.options.maxDelay,
            e.setDelayTimer && clearTimeout(e.setDelayTimer),
            e.setDelayTimer = setTimeout(function() {
                e.preview()
            },
            500)
        },
        setWidth: function() {
            var t = this;
            t.widthSelect.on("click", "span",
            function() {
                var e = $(this).data("width"),
                i = $(this).data("height");
                t.widthSelect.find("span").removeClass("active"),
                $(this).addClass("active"),
                t.options.selectWidth = e,
                t.options.selectHeight = i,
                t.preview(),
                t.widthSelect.find(".Z-widthInput").val(""),
                t.widthSelect.find(".Z-heightInput").val("")
            }),
            t.widthSelect.find(".Z-widthInput").on("input",
            function() {
                var e = $(this).val();
                util.isNum(e) ? (e = e <= t.options.maxWidth && e > t.options.minWidth ? e: t.options.minWidth, t.options.selectWidth = e, t.preview(), t.widthSelect.find("span").removeClass("active")) : t.widthSelect.find("span:eq(0)").trigger("click")
            }),
            t.widthSelect.find(".Z-heightInput").on("input",
            function() {
                var e = $(this).val();
                util.isNum(e) ? (e = e > t.options.minHeight ? e: t.options.minHeight, t.options.selectHeight = e, t.preview(), t.widthSelect.find("span").removeClass("active")) : t.widthSelect.find("span:eq(0)").trigger("click")
            })
        },
        dataURLtoBlob: function(t) {
            for (var e = t.split(","), i = e[0].match(/:(.*?);/)[1], a = atob(e[1]), n = a.length, s = new Uint8Array(n); n--;) {
                s[n] = a.charCodeAt(n)
            }
            return new Blob([s], {
                type: i
            })
        }
    }).init()
});