$(function() { ({
        options: {
            startTime: 0,
            defaultFrameTime: 5,
            width: 0,
            maxWidth: 640,
            minWidth: 5
        },
        init: function() {
            this.fileUrl = window.URL || window.webkitURL,
            this.videoContainer = $("#Z-videoContainer"),
            this.videoModel = $("#Z-videoModel"),
            this.timeSlider = $("#Z-timeSlider"),
            this.frameSlider = $("#Z-frameSlider"),
            this.makerBtn = $("#Z-makerBtn"),
            this.widthSelect = $("#Z-widthSelect"),
            this.viewList = $("#Z-viewList"),
            this.upload(),
            this.gifMaker(),
            this.setWidth(),
            this.deleteViewList()
        },
        upload: function() {
            var e = this,
            t = $("#Z-uploadBtn");
            t.on("change",
            function() {
				/*
                if ($("#level").val() <= 10) {
                    alert("升级VIP可用");
                    return false
                }
				*/
                var i = this.files;
                if (i[0].size > 104857600) {
                    dialog.alert({
                        content: "上传视频不能超过100M哦！"
                    })
                } else {
                    var n = new FileReader;
                    n.readAsDataURL(i[0]),
                    n.onload = function(t) {
                        e.getVideo().src = e.fileUrl.createObjectURL(e.dataURLtoBlob(this.result)),
                        e.videoContainer.addClass("preview")
                    },
                    e.getVideo().addEventListener("loadedmetadata",
                    function() {
                        t.val(""),
                        e.makerBtn.removeClass("disabled"),
                        e.resetSlider(),
                        e.initTimeSlider || (e.moveTimeSlider(), e.moveFrameSlider())
                    })
                }
            }),
            $("#Z-uploadAgain").on("click",
            function() {
                t.trigger("click")
            })
        },
        gifMaker: function() {
            var e = this;
            e.makerBtn.on("click",
            function() {
                if (!e.makerBtn.hasClass("disabled")) {
                    var t = e.getOptions();
                    e.Gif = new GIF({
                        workerScript: "./js/gif.help.js",
                        background: "#ffffff",
                        width: t.width,
                        height: t.height,
                        quality: 10,
                        workers: 4
                    }),
                    e.Gif.on("progress",
                    function(t) {
                        e.makerBtn.text("已完成  " + (Math.round(50 * t) + 50) + "%")
                    }),
                    e.Gif.on("finished",
                    function(t) {
                        e.Gif = null,
                        e.extractCounter && clearInterval(e.extractCounter),
                        e.makerBtn.removeClass("disabled").text("生成gif"),
                        e.viewList.prepend('<li><div class="view-item-image"><img src="' + e.fileUrl.createObjectURL(t) + '" /></div><div class="delete-btn Z-deleteBtn"><i class="iconfont icon-shanchu1"></i></div><a href="' + e.fileUrl.createObjectURL(t) + '" download="' + (new Date).getTime() + '">下载</a></li>')
                    }),
                    e.makerBtn.addClass("disabled"),
                    e.extractImageCounter(),
                    e.gifRender()
                }
            })
        },
        extractImageCounter: function() {
            var e = this;
            e.makerBtn.text("制作中...");
            var t = 0;
            e.extractCounter = setInterval(function() {
                t < e.frameTime ? (t++, e.makerBtn.text("已完成  " + parseInt(t / e.frameTime * 50) + "%")) : clearInterval(e.extractCounter)
            },
            1000)
        },
        gifRender: function() {
            var e = this,
            t = e.getVideo(),
            i = e.getOptions(),
            n = $(t).clone().get(0);
            n.volume = 0,
            n.addEventListener("loadedmetadata",
            function() {
                i.maxFrameTime > 0 ? n.currentTime = e.options.startTime: n.currentTime = i.duration - 0.1,
                n.paused && n.play(),
                n.onplaying = function() {
                    e.addInterval = setInterval(function() {
                        var t = document.createElement("canvas");
                        t.width = i.width,
                        t.height = i.height;
                        var o = t.getContext("2d");
                        o.drawImage(n, 0, 0, i.width, i.height),
                        e.Gif.addFrame(o, {
                            delay: i.delay
                        })
                    },
                    i.delay),
                    e.makerTimeout = setTimeout(function() {
                        clearInterval(e.addInterval),
                        clearTimeout(e.makerTimeout),
                        e.Gif.render()
                    },
                    i.maxFrameTime > 0 ? 1000 * i.maxFrameTime: 100)
                }
            })
        },
        getVideo: function() {
            return this.video || (this.video = $("<video controls>"), this.videoModel.append(this.video)),
            this.video.get(0)
        },
        getOptions: function() {
            var e = this.options || {},
            t = this.getVideo(),
            i = parseInt(t.currentTime),
            n = parseInt(t.duration),
            o = t.videoWidth,
            r = t.videoHeight;
            return o <= e.maxWidth ? e.width && e.width < o && (r *= e.width / o, o = e.width) : (r *= e.maxWidth / o, o = e.maxWidth),
            {
                width: o,
                height: r,
                currentTime: i,
                duration: n,
                delay: 100,
                maxFrameTime: parseInt(n - this.options.startTime > this.frameTime ? this.frameTime: n - this.options.startTime)
            }
        },
        setWidth: function() {
            var e = this;
            e.widthSelect.on("click", "span",
            function() {
                var t = $(this).data("width");
                e.widthSelect.find("span").removeClass("active"),
                $(this).addClass("active"),
                e.options.width = t,
                e.widthSelect.find(".Z-widthInput").val("")
            }),
            e.widthSelect.find(".Z-widthInput").on("input",
            function() {
                var t = $(this).val();
                util.isNum(t) && (e.options.width = t < e.options.maxWidth ? t > e.options.minWidth ? t: e.options.minWidth: e.options.maxWidth, e.widthSelect.find("span").removeClass("active"), e.widthSelect.find("span:eq(0)").addClass("active"))
            })
        },
        deleteViewList: function() {
            this.viewList.on("click", ".Z-deleteBtn",
            function() {
                $(this).closest("li").remove()
            })
        },
        moveTimeSlider: function() {
            var e = this,
            t = e.timeSlider.find(".line"),
            i = (e.timeSlider.find(".progress"), e.timeSlider.find(".bar")),
            n = t.width(),
            o = i.width(),
            r = n - o,
            a = !0;
            i.off("mousedown").on("mousedown",
            function(t) {
                a = !1;
                t.clientY;
                var n = t.clientX,
                o = i.position().left;
                i.get(0).getBoundingClientRect().left,
                e.getOptions().duration;
                util.forbiddenSelect(),
                $(document).off().on("mousemove",
                function(t) {
                    if (!a) {
                        var i = o + t.clientX - n;
                        i = i < 0 ? 0 : i <= r ? i: r,
                        e.setTimeSliderProcess(i)
                    }
                }).on("mouseup",
                function(e) {
                    a = !0,
                    util.autoSelect()
                })
            }),
            t.on("mousedown",
            function(n) {
                e.getOptions().duration,
                i.position().left;
                var o = n.clientX - t.get(0).getBoundingClientRect().left;
                o = o < 0 ? 0 : o <= r ? o: r,
                e.setTimeSliderProcess(o)
            }),
            e.initTimeSlider = !0
        },
        setTimeSliderProcess: function(e) {
            var t = this.timeSlider.find(".line"),
            i = this.timeSlider.find(".progress"),
            n = this.timeSlider.find(".bar"),
            o = this.timeSlider.find(".time"),
            r = this.getOptions(),
            a = parseInt(e / (t.width() - 10) * r.duration);
            n.css({
                left: e
            }),
            i.width(e),
            o.text(this.parseTime(a)),
            this.options.startTime = a
        },
        moveFrameSlider: function() {
            var e = this,
            t = e.frameSlider.find(".line"),
            i = (e.frameSlider.find(".progress"), e.frameSlider.find(".bar")),
            n = t.width() - i.width(),
            o = !0;
            i.off("mousedown").on("mousedown",
            function(t) {
                o = !1;
                t.clientY;
                var r = t.clientX,
                a = i.position().left;
                util.forbiddenSelect(),
                $(document).off("mousemove").on("mousemove",
                function(t) {
                    if (!o) {
                        var i = a + t.clientX - r;
                        i = i < 0 ? 0 : i <= n ? i: n,
                        e.setFrameSliderProcess(i)
                    }
                }).on("mouseup",
                function() {
                    o = !0,
                    util.autoSelect()
                })
            }).on("mouseup",
            function() {
                o = !0,
                util.autoSelect()
            }),
            t.on("mousedown",
            function(i) {
                var o = i.clientX - t.get(0).getBoundingClientRect().left;
                o = o < 0 ? 0 : o <= n ? o: n,
                e.setFrameSliderProcess(o)
            })
        },
        setFrameSliderProcess: function(e, t) {
            var i = this.frameSlider.find(".line"),
            n = this.frameSlider.find(".progress"),
            o = this.frameSlider.find(".bar"),
            r = this.frameSlider.find(".time"),
            a = this.getOptions(),
            d = e / (i.width() - 10) * a.duration;
            d < 1 && (d = 1, e = parseInt(1 / a.duration * (i.width() - 10))),
            t && (d = this.options.defaultFrameTime, e = this.options.defaultFrameTime / a.duration * i.width()),
            o.css({
                left: e
            }),
            n.width(e),
            r.text(parseInt(d)),
            this.frameTime = parseInt(d)
        },
        resetSlider: function() {
            this.getOptions().duration < this.options.defaultFrameTime && (this.options.defaultFrameTime = this.getOptions().duration),
            this.setTimeSliderProcess(0),
            this.setFrameSliderProcess(0, !0)
        },
        dataURLtoBlob: function(e) {
            for (var t = e.split(","), i = t[0].match(/:(.*?);/)[1], n = atob(t[1]), o = n.length, r = new Uint8Array(o); o--;) {
                r[o] = n.charCodeAt(o)
            }
            return new Blob([r], {
                type: i
            })
        },
        parseTime: function(e) {
            return util.isNum(e) ? (e = Number(e), [parseInt(e / 60 / 60), parseInt(e / 60 % 60), parseInt(e % 60)].join(":").replace(/\b(\d)\b/g, "0$1")) : "00:00:00"
        }
    }).init()
});